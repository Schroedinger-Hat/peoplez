import "@/styles/globals.css"

import Image from "next/image"
import Link from "next/link"
import React from "react"

import { membersMenuTreeConfig } from "@/app/members/const"
import { LogoutButton } from "@/components/molecules/logoutButton"
import { Button } from "@/components/ui/button"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet"
import logo from "@/images/logo.svg"
import { usernameToInitials } from "@/lib/utils"
import { getServerAuthSession } from "@/server/auth"

export const metadata = {
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
  title: "Create T3 App",
}

interface LayoutInterface {
  authenticated: React.ReactNode
  unauthenticated: React.ReactNode
}

export default async function RootLayout({
  authenticated,
  unauthenticated,
}: LayoutInterface) {
  const session = await getServerAuthSession()
  const isLoggedIn = session !== null

  if (!isLoggedIn) {
    return unauthenticated
  } else {
    return (
      <div className="grid min-h-screen w-full md:grid-cols-[220px_1fr] lg:grid-cols-[280px_1fr]">
        {/*Desktop Menu*/}
        <div className="hidden border-r bg-muted/40 md:block">
          <div className="flex h-full max-h-screen flex-col gap-2">
            <div className="flex h-14 items-center border-b px-4 lg:h-[60px] lg:px-6">
              <Link
                href="/public"
                className="flex items-center gap-2 font-semibold"
              >
                <Image src={logo} alt={"logo"} width={32} className={"mr-1"} />
                {process.env.MARKETING_NAME}
              </Link>
            </div>
            <div className="flex-1">
              <nav className="grid items-start px-2 text-sm font-medium lg:px-4">
                {membersMenuTreeConfig.map((item) => (
                  <Link
                    key={item.id}
                    href={item.url}
                    className="flex items-center gap-3 rounded-lg px-3 py-2 text-muted-foreground transition-all hover:text-primary"
                  >
                    {item.label}
                  </Link>
                ))}
              </nav>
            </div>
          </div>
        </div>
        <div className="flex flex-col">
          <header className="between flex h-14 content-between items-center justify-between gap-4 border-b bg-muted/40 px-4 md:justify-end lg:h-[60px] lg:px-6">
            <Sheet>
              <SheetTrigger asChild>
                <Button
                  variant="outline"
                  size="icon"
                  className="shrink-0 md:hidden"
                >
                  <span className="sr-only">Toggle navigation menu</span>
                </Button>
              </SheetTrigger>
              <SheetContent side="left" className="flex flex-col">
                <nav className="grid gap-2 text-lg font-medium">
                  <Link
                    href="#"
                    className="flex items-center gap-2 text-lg font-semibold"
                  >
                    <span className="sr-only">Acme Inc</span>
                  </Link>

                  {membersMenuTreeConfig.map((item) => (
                    <Link
                      key={item.id}
                      href={item.url}
                      className="mx-[-0.65rem] flex items-center gap-4 rounded-xl px-3 py-2 text-muted-foreground hover:text-foreground"
                    >
                      {item.label}
                    </Link>
                  ))}
                </nav>
              </SheetContent>
            </Sheet>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Button
                  variant="secondary"
                  size="icon"
                  className="rounded-full bg-gray-300"
                >
                  <span className="sr-only">Toggle user menu</span>
                  {usernameToInitials(session?.user.name ?? "")}
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuLabel>{session?.user.email}</DropdownMenuLabel>
                <DropdownMenuSeparator />
                <Link href={"/documents/help"}>
                  <DropdownMenuItem>Support</DropdownMenuItem>
                </Link>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <LogoutButton />
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </header>

          <main className="flex flex-1 flex-col gap-4 p-4 lg:gap-6 lg:p-6">
            {authenticated}
          </main>
        </div>
      </div>
    )
  }
}
